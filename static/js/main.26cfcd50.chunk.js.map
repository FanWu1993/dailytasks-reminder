{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Daily/DailyChart.js","components/Daily/DailyFilter.js","components/Daily/DailyTask.js","components/Daily/DailyList.js","components/Daily/Daily.js","components/NewDaily/DailyForm.js","components/NewDaily/NewDaily.js","initFirebase.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPoints","map","dataPoint","done","DailyChart","chartDataPoints","dailyTasks","daily","dailyLocation","location","chartDataPoint","find","undefined","push","indexOf","DailyFilter","dropdownChangeHandler","event","onChangeFilter","target","locations","selected","onChange","random","toString","progress","DailyTask","useState","setDone","task","onClick","DailyList","items","length","id","Daily","filteredLocation","setFilteredLocation","filteredProgress","setFilteredProgress","filtered","Set","filteredDailyTasks","filter","firstChild","DailyForm","enteredLocation","setEnteredLocation","enteredTask","setEnteredTask","onSubmit","preventDefault","dailyData","onSaveDailyData","type","onCancel","NewDaily","isEditing","setIsEditing","enteredDailyData","onAddDaily","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","getUserData","firebase","database","ref","on","snapshot","state","val","console","log","setState","componentDidMount","apps","app","initializeApp","writeUserData","set","prevProps","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4bAQeA,EALF,SAACC,GACV,IAAMC,EAAU,QAAUD,EAAME,UAChC,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,Y,gBCe5BC,G,YAjBE,SAACJ,GACd,IAAIK,EAAgB,KAMpB,OAJIL,EAAMM,SAAW,IACjBD,EAAgBE,KAAKC,MAAOR,EAAMS,MAAQT,EAAMM,SAAY,KAAO,KAInE,sBAAKJ,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAkBQ,MAAO,CAAEC,OAAQN,OAEtD,qBAAKH,UAAU,mBAAf,SAAmCF,EAAMY,aCAtCC,EAXD,SAACb,GAGX,OACI,qBAAKE,UAAU,QAAf,SACKF,EAAMc,WAAWC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAAgCP,MAAOO,EAAUC,KAAMX,SAAUU,EAAUP,MAAOG,MAAOI,EAAUJ,OAApFI,EAAUJ,aCiB1BM,EAxBI,SAAClB,GAChB,IAD0B,EACpBmB,EAAkB,GADE,cAGNnB,EAAMoB,YAHA,yBAGfC,EAHe,QAIhBC,EAAgBD,EAAME,SACtBC,EAAiBL,EAAgBM,MAAK,SAACD,GAAD,OAAoBA,EAAeZ,QAAUU,UAClEI,IAAnBF,EACIH,EAAMJ,KACNE,EAAgBQ,KAAK,CAAEf,MAAOU,EAAeb,MAAO,EAAGQ,KAAM,IAE7DE,EAAgBQ,KAAK,CAAEf,MAAOU,EAAeb,MAAO,EAAGQ,KAAM,IAG7DI,EAAMJ,MACNE,EAAgBA,EAAgBS,QAAQJ,IAAiBf,OAAS,EAClEU,EAAgBA,EAAgBS,QAAQJ,IAAiBP,MAAQ,GAEjEE,EAAgBA,EAAgBS,QAAQJ,IAAiBf,OAAS,GAd9E,2BAAuC,IAHb,8BAqB1B,OAAO,cAAC,EAAD,CAAOK,WAAYK,KCSfU,G,MA9BK,SAAC7B,GACjB,IAAM8B,EAAwB,SAACC,GAC3B/B,EAAMgC,eAAeD,EAAME,SAGzBC,EAAS,CAAI,4BAAJ,mBAAelC,EAAMkC,YAEpC,OACI,qBAAKhC,UAAU,eAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,4CACA,wBAAQO,MAAOT,EAAMmC,SAASZ,SAAUa,SAAUN,EAAlD,SACKI,EAAUnB,KAAI,SAACQ,GAAD,OACX,wBAAuCd,MAAOc,EAA9C,SACKA,GADQhB,KAAK8B,SAASC,iBAKnC,wBAAQ7B,MAAOT,EAAMmC,SAASI,SAAUH,SAAUN,EAAlD,SAZO,CAAC,2BAAQ,qBAAO,gBAaPf,KAAI,SAACwB,GAAD,OACZ,wBAAuC9B,MAAO8B,EAA9C,SACKA,GADQhC,KAAK8B,SAASC,wBCGpCE,G,YAtBG,SAACxC,GACf,MAAwByC,mBAASzC,EAAMiB,MAAvC,mBAAOA,EAAP,KAAayB,EAAb,KAMA,OACI,6BACI,eAAC,EAAD,CAAMxC,UAAU,aAAhB,UACI,qBAAKA,UAAU,aAAf,SAA6BF,EAAMuB,WACnC,sBAAKrB,UAAU,2BAAf,UACI,6BAAKF,EAAM2C,OACX,qBAAKC,QAXA,WACZ3B,GACDyB,GAASzB,IAS2Bf,UAAU,oBAAtC,SACMe,EAAe,eAAR,iCCElB4B,EAhBG,SAAC7C,GACf,OAA2B,IAAvBA,EAAM8C,MAAMC,OACL,oBAAI7C,UAAU,uBAAd,6CAIP,oBAAIA,UAAU,aAAd,SACKF,EAAM8C,MAEF/B,KAAI,SAACM,GAAD,OACD,cAAC,EAAD,CAA0BE,SAAUF,EAAME,SAAUoB,KAAMtB,EAAMsB,KAAM1B,KAAMI,EAAMJ,MAAlEI,EAAM2B,UCkC3BC,EAzCD,SAACjD,GACX,MAAgDyC,mBAAS,4BAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAAgDV,mBAAS,4BAAzD,mBAAOW,EAAP,KAAyBC,EAAzB,KACMC,EAAW,CACb/B,SAAU2B,EACVX,SAAUa,GAURlB,EAAS,YAAO,IAAIqB,IAAIvD,EAAMoB,WAAWL,KAAI,SAACM,GAAD,OAAWA,EAAME,cAEhEiC,EACqB,6BAArBN,EACMlD,EAAMoB,WACNpB,EAAMoB,WAAWqC,QAAO,SAACpC,GACrB,OAAOA,EAAME,WAAa2B,KASxC,OAPAM,EACyB,6BAArBJ,EACMI,EACAA,EAAmBC,QAAO,SAACpC,GACvB,OAAOA,EAAMJ,QAA+B,iBAArBmC,MAIjC,8BACI,eAAC,EAAD,CAAMlD,UAAU,QAAhB,UACI,cAAC,EAAD,CAAagC,UAAWA,EAAWC,SAAUmB,EAAUtB,eA1BvC,SAACC,GACO,6BAA5BA,EAAOyB,WAAWjD,MAClB4C,EAAoBpB,EAAOxB,OAE3B0C,EAAoBlB,EAAOxB,UAuBvB,cAAC,EAAD,CAAYW,WAAYoC,IACxB,cAAC,EAAD,CAAWV,MAAOU,U,QC2BnBG,G,MAlEG,SAAC3D,GACf,MAA8CyC,mBAAS,IAAvD,mBAAOmB,EAAP,KAAwBC,EAAxB,KACA,EAAsCpB,mBAAS,IAA/C,mBAAOqB,EAAP,KAAoBC,EAApB,KAsCA,OACI,uBAAMC,SAbY,SAACjC,GACnBA,EAAMkC,iBACN,IAAMC,EAAY,CACd3C,SAAUqC,EACVjB,KAAMmB,EACN7C,MAAM,GAEVjB,EAAMmE,gBAAgBD,GACtBL,EAAmB,IACnBE,EAAe,KAIf,UACI,sBAAK7D,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,iDACA,uBAAOkE,KAAK,OAAO3D,MAAOmD,EAAiBxB,SAtC7B,SAACL,GAC3B8B,EAAmB9B,EAAME,OAAOxB,aAuCxB,sBAAKP,UAAU,qBAAf,UACI,iDACA,uBAAOkE,KAAK,OAAO3D,MAAOqD,EAAa1B,SAhC7B,SAACL,GACvBgC,EAAehC,EAAME,OAAOxB,gBAsCxB,sBAAKP,UAAU,qBAAf,UACI,wBAAQkE,KAAK,SAASxB,QAAS5C,EAAMqE,SAArC,0BAGA,wBAAQD,KAAK,SAAb,8CChCDE,G,MA3BE,SAACtE,GACd,MAAkCyC,oBAAS,GAA3C,mBAAO8B,EAAP,KAAkBC,EAAlB,KAmBA,OACI,sBAAKtE,UAAU,YAAf,WACMqE,GAAa,wBAAQ3B,QAVH,WACxB4B,GAAa,IASM,4CACdD,GAAa,cAAC,EAAD,CAAWF,SAPN,WACvBG,GAAa,IAM8CL,gBApBlC,SAACM,GAC1B,IAAMP,EAAS,aACXlB,GAAIzC,KAAK8B,SAASC,YACfmC,GAEPzE,EAAM0E,WAAWR,GACjBM,GAAa,WCHNG,EAVA,CACXC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,0DACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,6CCuDIC,GAvDL5E,KAAK8B,SAASC,WACd/B,KAAK8B,SAASC,WACd/B,KAAK8B,SAASC,WACd/B,KAAK8B,SAASC,WACd/B,KAAK8B,SAASC,WACd/B,KAAK8B,SAASC,W,kDAIpB,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IAMVoF,YAAc,WACAC,IAASC,WAAWC,IAAI,UAC9BC,GAAG,SAAS,SAACC,GACb,IAAMC,EAAQD,EAASE,MACvBC,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAAE1E,WAAYsE,QAZjB,EAgBnBK,kBAAoB,WACXV,IAASW,KAAKjD,OAGfsC,IAASY,MAFTZ,IAASa,cAAcvB,GAI3B,EAAKS,eAtBU,EA6BnBe,cAAgB,WACZd,IAASC,WAAWC,IAAI,UAAUa,IAAI,EAAKV,MAAMtE,YACjDwE,QAAQC,IAAI,eA7BZ,EAAKH,MAAQ,CACTtE,WAAY,IAHD,E,sDAwBnB,SAAmBiF,EAAWC,GACtBA,IAAcC,KAAKb,OACnBa,KAAKJ,kB,oBAOb,WAAU,IAAD,OAIL,OACI,gCACI,cAAC,EAAD,CAAUzB,WALM,SAACrD,GACrB,EAAKyE,SAAS,CAAE1E,WAAW,GAAD,mBAAM,EAAKsE,MAAMtE,YAAjB,CAA6BC,SAKnD,cAAC,EAAD,CAAOD,WAAYmF,KAAKb,MAAMtE,oB,GAzC5BoF,c,MCVlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.26cfcd50.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n    // const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n    // const totalMaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar key={dataPoint.label} value={dataPoint.done} maxValue={dataPoint.value} label={dataPoint.label} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst DailyChart = (props) => {\r\n    const chartDataPoints = [];\r\n\r\n    for (const daily of props.dailyTasks) {\r\n        const dailyLocation = daily.location;\r\n        const chartDataPoint = chartDataPoints.find((chartDataPoint) => chartDataPoint.label === dailyLocation);\r\n        if (chartDataPoint === undefined) {\r\n            if (daily.done) {\r\n                chartDataPoints.push({ label: dailyLocation, value: 1, done: 1 });\r\n            } else {\r\n                chartDataPoints.push({ label: dailyLocation, value: 1, done: 0 });\r\n            }\r\n        } else {\r\n            if (daily.done) {\r\n                chartDataPoints[chartDataPoints.indexOf(chartDataPoint)].value += 1;\r\n                chartDataPoints[chartDataPoints.indexOf(chartDataPoint)].done += 1;\r\n            } else {\r\n                chartDataPoints[chartDataPoints.indexOf(chartDataPoint)].value += 1;\r\n            }\r\n        }\r\n    }\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default DailyChart;\r\n","import React from 'react';\r\nimport './DailyFilter.css';\r\n\r\nconst DailyFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target);\r\n    };\r\n\r\n    const locations = ['所有地图', ...props.locations];\r\n    const progresses = ['所有状态', '未完成', '完成'];\r\n    return (\r\n        <div className='daily-filter'>\r\n            <div className='daily-filter__control'>\r\n                <label>Filters</label>\r\n                <select value={props.selected.location} onChange={dropdownChangeHandler}>\r\n                    {locations.map((location) => (\r\n                        <option key={Math.random().toString()} value={location}>\r\n                            {location}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select value={props.selected.progress} onChange={dropdownChangeHandler}>\r\n                    {progresses.map((progress) => (\r\n                        <option key={Math.random().toString()} value={progress}>\r\n                            {progress}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailyFilter;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './DailyTask.css';\r\n\r\nconst DailyTask = (props) => {\r\n    const [done, setDone] = useState(props.done);\r\n    const clickHandler = () => {\r\n        if (!done) {\r\n            setDone(!done);\r\n        }\r\n    };\r\n    return (\r\n        <li>\r\n            <Card className='daily-item'>\r\n                <div className='daily-date'>{props.location}</div>\r\n                <div className='daily-item__description '>\r\n                    <h2>{props.task}</h2>\r\n                    <div onClick={clickHandler} className='daily-item__price'>\r\n                        {!done ? '未完成' : '完成'}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DailyTask;\r\n","import React from 'react';\r\nimport './DailyList.css';\r\nimport DailyTask from './DailyTask';\r\n\r\nconst DailyList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className='daily-list__fallback'>么得日常啦!</h2>;\r\n    }\r\n\r\n    return (\r\n        <ul className='daily-list'>\r\n            {props.items\r\n                // .filter((daily) => (daily.location = filteredLocation))\r\n                .map((daily) => (\r\n                    <DailyTask key={daily.id} location={daily.location} task={daily.task} done={daily.done} />\r\n                ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default DailyList;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './Daily.css';\r\nimport DailyChart from './DailyChart';\r\nimport DailyFilter from './DailyFilter';\r\nimport DailyList from './DailyList';\r\n\r\nconst Daily = (props) => {\r\n    const [filteredLocation, setFilteredLocation] = useState('所有地图');\r\n    const [filteredProgress, setFilteredProgress] = useState('所有状态');\r\n    const filtered = {\r\n        location: filteredLocation,\r\n        progress: filteredProgress\r\n    };\r\n    const filterChangeHandler = (target) => {\r\n        if (target.firstChild.value === '所有状态') {\r\n            setFilteredProgress(target.value);\r\n        } else {\r\n            setFilteredLocation(target.value);\r\n        }\r\n    };\r\n\r\n    const locations = [...new Set(props.dailyTasks.map((daily) => daily.location))];\r\n\r\n    let filteredDailyTasks =\r\n        filteredLocation === '所有地图'\r\n            ? props.dailyTasks\r\n            : props.dailyTasks.filter((daily) => {\r\n                  return daily.location === filteredLocation;\r\n              });\r\n    filteredDailyTasks =\r\n        filteredProgress === '所有状态'\r\n            ? filteredDailyTasks\r\n            : filteredDailyTasks.filter((daily) => {\r\n                  return daily.done === (filteredProgress === '完成' ? true : false);\r\n              });\r\n\r\n    return (\r\n        <div>\r\n            <Card className='daily'>\r\n                <DailyFilter locations={locations} selected={filtered} onChangeFilter={filterChangeHandler} />\r\n                <DailyChart dailyTasks={filteredDailyTasks} />\r\n                <DailyList items={filteredDailyTasks} />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Daily;\r\n","import React, { useState } from 'react';\r\nimport './DailyForm.css';\r\n\r\nconst DailyForm = (props) => {\r\n    const [enteredLocation, setEnteredLocation] = useState('');\r\n    const [enteredTask, setEnteredTask] = useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredLocation: '',\r\n    //     enteredTask: ''\r\n    // });\r\n    const locationChangeHandler = (event) => {\r\n        setEnteredLocation(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredLocation: event.target.value\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredLocation: event.target.value };\r\n        // });\r\n    };\r\n    const taskChangeHandler = (event) => {\r\n        setEnteredTask(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTask: event.target.value\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTask: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const dailyData = {\r\n            location: enteredLocation,\r\n            task: enteredTask,\r\n            done: false\r\n        };\r\n        props.onSaveDailyData(dailyData);\r\n        setEnteredLocation('');\r\n        setEnteredTask('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-daily__controls'>\r\n                <div className='new-daily__control'>\r\n                    <label>地图</label>\r\n                    <input type='text' value={enteredLocation} onChange={locationChangeHandler}></input>\r\n                </div>\r\n                <div className='new-daily__control'>\r\n                    <label>任务</label>\r\n                    <input type='text' value={enteredTask} onChange={taskChangeHandler}></input>\r\n                </div>\r\n                {/* <div className='new-daily__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31'></input>\r\n                </div> */}\r\n            </div>\r\n            <div className='new-daily__actions'>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    取消\r\n                </button>\r\n                <button type='submit'>添加日常</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DailyForm;\r\n","import React, { useState } from 'react';\r\nimport DailyForm from './DailyForm';\r\nimport './NewDaily.css';\r\n\r\nconst NewDaily = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveDailyDataHandler = (enteredDailyData) => {\r\n        const dailyData = {\r\n            id: Math.random().toString(),\r\n            ...enteredDailyData\r\n        };\r\n        props.onAddDaily(dailyData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-daily'>\r\n            {!isEditing && <button onClick={startEditingHandler}>添加新日常</button>}\r\n            {isEditing && <DailyForm onCancel={stopEditingHandler} onSaveDailyData={saveDailyDataHandler} />}\r\n        </div>\r\n    );\r\n};\r\nexport default NewDaily;\r\n","const config = {\r\n    apiKey: 'AIzaSyBt2EIaFdmrOUwRvDTxB9w65ioBs5xJG64',\r\n    authDomain: 'dailytasks-reminder.firebaseapp.com',\r\n    databaseURL: 'https://dailytasks-reminder-default-rtdb.firebaseio.com',\r\n    projectId: 'dailytasks-reminder',\r\n    storageBucket: 'dailytasks-reminder.appspot.com',\r\n    messagingSenderId: '190850445875',\r\n    appId: '1:190850445875:web:5e7cf5f4371edf732f6946'\r\n};\r\n\r\nexport default config;\r\n","import firebase from 'firebase';\nimport React, { Component } from 'react';\nimport Daily from './components/Daily/Daily';\nimport NewDaily from './components/NewDaily/NewDaily';\nimport config from './initFirebase';\n\nconst DUMMY_DAILYTASKS = [\n    { id: Math.random().toString(), location: '老长安', task: '日常1', done: false },\n    { id: Math.random().toString(), location: '成都', task: '日常2', done: true },\n    { id: Math.random().toString(), location: '侠客岛', task: '日常3', done: false },\n    { id: Math.random().toString(), location: '老长安', task: '日常4', done: true },\n    { id: Math.random().toString(), location: '副本', task: '副本名1', done: false },\n    { id: Math.random().toString(), location: '副本', task: '副本名2', done: false }\n];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dailyTasks: []\n        };\n    }\n\n    getUserData = () => {\n        let ref = firebase.database().ref('/daily');\n        ref.on('value', (snapshot) => {\n            const state = snapshot.val();\n            console.log(state);\n            this.setState({ dailyTasks: state });\n        });\n    };\n\n    componentDidMount = () => {\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        } else {\n            firebase.app(); // if already initialized, use that one\n        }\n        this.getUserData();\n    };\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState !== this.state) {\n            this.writeUserData();\n        }\n    }\n    writeUserData = () => {\n        firebase.database().ref('/daily').set(this.state.dailyTasks);\n        console.log('DATA SAVED');\n    };\n    render() {\n        const addDailyHandler = (daily) => {\n            this.setState({ dailyTasks: [...this.state.dailyTasks, daily] });\n        };\n        return (\n            <div>\n                <NewDaily onAddDaily={addDailyHandler} />\n                <Daily dailyTasks={this.state.dailyTasks} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}