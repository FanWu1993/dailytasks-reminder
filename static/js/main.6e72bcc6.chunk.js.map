{"version":3,"sources":["components/UI/Card.js","components/Daily/DailyFilter.js","components/Daily/DailyTask.js","components/Daily/DailyList.js","components/Daily/Daily.js","components/NewDaily/DailyForm.js","components/NewDaily/NewDaily.js","App.js","index.js"],"names":["Card","props","classes","className","children","DailyFilter","dropdownChangeHandler","event","onChangeFilter","target","locations","value","selected","location","onChange","map","Math","random","toString","progress","DailyTask","useState","done","setDone","task","onClick","DailyList","items","length","daily","id","Daily","filteredLocation","setFilteredLocation","filteredProgress","setFilteredProgress","filtered","Set","dailyTasks","filteredDailyTasks","filter","firstChild","DailyForm","enteredLocation","setEnteredLocation","enteredTask","setEnteredTask","onSubmit","preventDefault","dailyData","onSaveDailyData","type","onCancel","NewDaily","isEditing","setIsEditing","enteredDailyData","onAddDaily","DUMMY_DAILYTASKS","App","dailytasks","setDailytasks","prevDailytasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e72bcc6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './DailyFilter.css';\r\n\r\nconst DailyFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target);\r\n    };\r\n\r\n    const locations = ['所有地图', ...props.locations];\r\n    const progresses = ['所有状态', '未完成', '完成'];\r\n    return (\r\n        <div className='daily-filter'>\r\n            <div className='daily-filter__control'>\r\n                <label>Filters</label>\r\n                <select value={props.selected.location} onChange={dropdownChangeHandler}>\r\n                    {locations.map((location) => (\r\n                        <option key={Math.random().toString()} value={location}>\r\n                            {location}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select value={props.selected.progress} onChange={dropdownChangeHandler}>\r\n                    {progresses.map((progress) => (\r\n                        <option key={Math.random().toString()} value={progress}>\r\n                            {progress}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailyFilter;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './DailyTask.css';\r\n\r\nconst DailyTask = (props) => {\r\n    const [done, setDone] = useState(props.done);\r\n    const clickHandler = () => {\r\n        if (!done) {\r\n            setDone(!done);\r\n        }\r\n    };\r\n    return (\r\n        <li>\r\n            <Card className='daily-item'>\r\n                <div className='daily-date'>{props.location}</div>\r\n                <div className='daily-item__description '>\r\n                    <h2>{props.task}</h2>\r\n                    <div onClick={clickHandler} className='daily-item__price'>\r\n                        {!done ? '未完成' : '完成'}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DailyTask;\r\n","import React from 'react';\r\nimport './DailyList.css';\r\nimport DailyTask from './DailyTask';\r\n\r\nconst DailyList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className='daily-list__fallback'>么得日常啦!</h2>;\r\n    }\r\n\r\n    return (\r\n        <ul className='daily-list'>\r\n            {props.items\r\n                // .filter((daily) => (daily.location = filteredLocation))\r\n                .map((daily) => (\r\n                    <DailyTask key={daily.id} location={daily.location} task={daily.task} done={daily.done} />\r\n                ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default DailyList;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './Daily.css';\r\nimport DailyFilter from './DailyFilter';\r\nimport DailyList from './DailyList';\r\n\r\nconst Daily = (props) => {\r\n    const [filteredLocation, setFilteredLocation] = useState('所有地图');\r\n    const [filteredProgress, setFilteredProgress] = useState('所有状态');\r\n    const filtered = {\r\n        location: filteredLocation,\r\n        progress: filteredProgress\r\n    };\r\n    const filterChangeHandler = (target) => {\r\n        if (target.firstChild.value === '所有状态') {\r\n            setFilteredProgress(target.value);\r\n        } else {\r\n            setFilteredLocation(target.value);\r\n        }\r\n    };\r\n\r\n    const locations = [...new Set(props.dailyTasks.map((daily) => daily.location))];\r\n\r\n    let filteredDailyTasks =\r\n        filteredLocation === '所有地图'\r\n            ? props.dailyTasks\r\n            : props.dailyTasks.filter((daily) => {\r\n                  return daily.location === filteredLocation;\r\n              });\r\n    filteredDailyTasks =\r\n        filteredProgress === '所有状态'\r\n            ? filteredDailyTasks\r\n            : filteredDailyTasks.filter((daily) => {\r\n                  return daily.done === (filteredProgress === '完成' ? true : false);\r\n              });\r\n\r\n    return (\r\n        <div>\r\n            <Card className='daily'>\r\n                <DailyFilter locations={locations} selected={filtered} onChangeFilter={filterChangeHandler} />\r\n                <DailyList items={filteredDailyTasks} />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Daily;\r\n","import React, { useState } from 'react';\r\nimport './DailyForm.css';\r\n\r\nconst DailyForm = (props) => {\r\n    const [enteredLocation, setEnteredLocation] = useState('');\r\n    const [enteredTask, setEnteredTask] = useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredLocation: '',\r\n    //     enteredTask: ''\r\n    // });\r\n    const locationChangeHandler = (event) => {\r\n        setEnteredLocation(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredLocation: event.target.value\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredLocation: event.target.value };\r\n        // });\r\n    };\r\n    const taskChangeHandler = (event) => {\r\n        setEnteredTask(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTask: event.target.value\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTask: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const dailyData = {\r\n            location: enteredLocation,\r\n            task: enteredTask,\r\n            done: false\r\n        };\r\n        props.onSaveDailyData(dailyData);\r\n        setEnteredLocation('');\r\n        setEnteredTask('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-daily__controls'>\r\n                <div className='new-daily__control'>\r\n                    <label>地图</label>\r\n                    <input type='text' value={enteredLocation} onChange={locationChangeHandler}></input>\r\n                </div>\r\n                <div className='new-daily__control'>\r\n                    <label>任务</label>\r\n                    <input type='text' value={enteredTask} onChange={taskChangeHandler}></input>\r\n                </div>\r\n                {/* <div className='new-daily__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31'></input>\r\n                </div> */}\r\n            </div>\r\n            <div className='new-daily__actions'>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    取消\r\n                </button>\r\n                <button type='submit'>添加日常</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DailyForm;\r\n","import React, { useState } from 'react';\r\nimport DailyForm from './DailyForm';\r\nimport './NewDaily.css';\r\n\r\nconst NewDaily = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveDailyDataHandler = (enteredDailyData) => {\r\n        const dailyData = {\r\n            id: Math.random().toString(),\r\n            ...enteredDailyData\r\n        };\r\n        props.onAddDaily(dailyData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-daily'>\r\n            {!isEditing && <button onClick={startEditingHandler}>添加新日常</button>}\r\n            {isEditing && <DailyForm onCancel={stopEditingHandler} onSaveDailyData={saveDailyDataHandler} />}\r\n        </div>\r\n    );\r\n};\r\nexport default NewDaily;\r\n","import React, { useState } from 'react';\nimport Daily from './components/Daily/Daily';\nimport NewDaily from './components/NewDaily/NewDaily';\nconst DUMMY_DAILYTASKS = [\n    { id: Math.random().toString(), location: '老长安', task: '日常1', done: false },\n    { id: Math.random().toString(), location: '成都', task: '日常2', done: true },\n    { id: Math.random().toString(), location: '侠客岛', task: '日常3', done: false },\n    { id: Math.random().toString(), location: '老长安', task: '日常4', done: true },\n    { id: Math.random().toString(), location: '副本', task: '副本名1', done: false },\n    { id: Math.random().toString(), location: '副本', task: '副本名2', done: false }\n];\n\nconst App = () => {\n    const [dailytasks, setDailytasks] = useState(DUMMY_DAILYTASKS);\n\n    const addDailyHandler = (daily) => {\n        setDailytasks((prevDailytasks) => {\n            return [daily, ...prevDailytasks];\n        });\n    };\n    return (\n        <div>\n            <NewDaily onAddDaily={addDailyHandler} />\n            <Daily dailyTasks={dailytasks} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}